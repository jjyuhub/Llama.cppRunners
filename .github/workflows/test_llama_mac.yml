name: Build and Test Llama.cpp on macOS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2  # This step clones the current repository

    - name: Clone llama.cpp repository
      run: |
        git clone https://github.com/your-username/llama.cpp.git  # Replace with actual repository URL
        cd llama.cpp  # Navigate into the cloned llama.cpp directory

    - name: Set up environment
      run: |
        # Install dependencies
        brew install cmake
        brew install gcc
        brew install wget
        brew install libomp

    - name: Build llama.cpp
      run: |
        # Navigate to the llama.cpp directory
        cd $GITHUB_WORKSPACE/llama.cpp  # Ensure we're in the correct directory
        mkdir -p build
        cd build
        cmake ..  # Run cmake from the build directory
        cmake --build . --parallel $(sysctl -n hw.ncpu)  # Build with parallel jobs
        ls -la  # List all files in the build directory

    - name: Verify if llama-run is built
      run: |
        # Search for llama-run binary in the build directory
        find . -name "llama-run"
        ls -la ./build  # List contents of the build directory
        ls -la ./build/bin  # List the bin directory to check if llama-run is there

    - name: Set execute permissions for llama-run (if found)
      run: |
        chmod +x ./build/bin/llama-run || echo "llama-run not found, skipping permission change"

    - name: Run llama with test prompt
      run: |
        # Assuming llama-run is located in ./build/bin/
        if [ -f ./build/bin/llama-run ]; then
          ./build/bin/llama-run file://models/deepseek-r1-distill/DeepSeek-R1-Distill-Qwen-1.5B-Q4_K_M.gguf "What is DeepSeek R1?"
        else
          echo "llama-run not found. Build might have failed."
        fi
